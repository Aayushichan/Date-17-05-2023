class Solution {
     static int fun(int n,int r)
   {   int res=1;
       for(int i=0;i<r;i++)
       {
          
           res=res*(n-1);
           res=res/(i+1);
       }
       return res;
   }
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        ArrayList<Long> ans=new ArrayList<>();
        for(int i=1;i<=n;i++)
        {
            ans.add((long)fun(n-1,i-1));
        }
        return ans;
    }
}  


Spiral matrix    class Solution {
     static int fun(int n,int r)
   {   int res=1;
       for(int i=0;i<r;i++)
       {
          
           res=res*(n-1);
           res=res/(i+1);
       }
       return res;
   }
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        ArrayList<Long> ans=new ArrayList<>();
        for(int i=1;i<=n;i++)
        {
            ans.add((long)fun(n-1,i-1));
        }
        return ans;
    }
}   




Rotate mstrix
 class Solution {
     static int fun(int n,int r)
   {   int res=1;
       for(int i=0;i<r;i++)
       {
          
           res=res*(n-1);
           res=res/(i+1);
       }
       return res;
   }
    ArrayList<Long> nthRowOfPascalTriangle(int n) {
        ArrayList<Long> ans=new ArrayList<>();
        for(int i=1;i<=n;i++)
        {
            ans.add((long)fun(n-1,i-1));
        }
        return ans;
    }
}